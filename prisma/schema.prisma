// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Produtos {
  id        Int      @id @default(autoincrement())
  descricao      String
  nomeEtiqueta String?
  preco     Float
  estoque   Float
  estoqueMinimo Float?
  unidades  String?
  idCategoria Int
  promocao Boolean
  precoPromocao Float?
  categoria Categorias? @relation(fields: [idCategoria], references: [id])
  itVendas  itVendas[]
  imagem    String?
  color String?
  isFavorite Boolean?
  networkImage Boolean?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Categorias{
  id        Int      @id @default(autoincrement())
  nome      String
  produtos  Produtos[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model itVendas{
  id        Int      @id @default(autoincrement())
  idVenda   Int   
  venda   Vendas @relation(fields: [idVenda], references: [id])
  idProduto Int 
  produto Produtos? @relation(fields: [idProduto], references: [id])
  ficha Ficha? @relation(fields: [idFicha], references: [id])
  idFicha Int?
  desconto Float
  quantidade Float
  valorUnitario Float
  total Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([idVenda, idProduto])
}

model Vendas{
  id        Int      @id @default(autoincrement())
  clienteModel Clientes? @relation(fields: [idCliente], references: [id])
  idCliente Int
  funcionarioModel Funcionarios? @relation(fields: [idFuncionario], references: [id])
  idFuncionario Int
  descontoTotal Float
  valorTotal Float
  itVendas  itVendas[]
  formaPagamentoVenda FormaPagamentoVenda[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Configuracoes{
  id        Int      @id @default(autoincrement())
  bloquearSemEstoque Boolean?
  avisarSemEstoque Boolean?
  avisarEstoqueMinimo Boolean?
  bloquearEstoqueMinimo Boolean?
  versao String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pessoas{
  id       Int      @id @default(autoincrement())
  nome     String
  cpf      String
  endereco String
  telefone String
  email    String
  funcionario Funcionarios[]
  clientes Clientes[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Clientes{
  id       Int      @id @default(autoincrement())
  pessoasModel Pessoas @relation(fields: [idPessoas], references: [id])
  idPessoas Int
  vendas Vendas[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Funcionarios{
  id       Int      @id @default(autoincrement())
  vendas Vendas[]
  pessoasModel Pessoas @relation(fields: [id], references: [id])
  idPessoas Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ficha{
  id       Int      @id @default(autoincrement()) 
  dataVenda String
  itVendas itVendas[]
  codigoItVendas Int  
  codigoProduto Int 
  retirado Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([codigoItVendas, codigoProduto])
}


model FormaPagamento{
  id       Int      @id @default(autoincrement())
  nome     String
  formaPagamentoVenda FormaPagamentoVenda[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FormaPagamentoVenda{
  id       Int      @id @default(autoincrement())
  idFormaPagamento Int
  formaPagamento FormaPagamento? @relation(fields: [idFormaPagamento], references: [id])
  idVenda Int
  valor Float
  venda Vendas? @relation(fields: [idVenda], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}